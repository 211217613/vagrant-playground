# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.network "private_network", ip: "192.168.50.15"

  config.vm.provision "shell", inline: <<-SHELL
    set -x
    export IP_ADDR=`ip route get 8.8.8.8 | awk '$1 == "8.8.8.8" {print $7}'`

    swapoff -a # https://github.com/kubernetes/kubernetes/issues/53533
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable" > /etc/apt/sources.list.d/docker.list
    echo "deb http://packages.cloud.google.com/apt cloud-sdk-xenial main" > /etc/apt/sources.list.d/google-cloud-sdk.list
    echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list

    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get dist-upgrade -y
    apt-get install -y apt-transport-https ca-certificates curl make software-properties-common
    apt-get install -y docker-ce
    apt-get install -y kubelet kubectl kubeadm

    kubeadm init --pod-network-cidr=192.168.99.0/24 --apiserver-advertise-address=$IP_ADDR --apiserver-cert-extra-sans=$IP_ADDR

    mkdir ~/.kube
    cp /etc/kubernetes/admin.conf ~/.kube/config
    echo '. <(kubectl completion bash)' >> ~/.bashrc

    usermod -aG docker vagrant
    mkdir ~vagrant/.kube
    cp /etc/kubernetes/admin.conf ~vagrant/.kube/config
    echo '. <(kubectl completion bash)' >> ~vagrant/.bashrc
    chown -R vagrant:vagrant ~vagrant

    kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
    kubectl taint nodes ubuntu-xenial node-role.kubernetes.io/master:NoSchedule-
  SHELL

end
